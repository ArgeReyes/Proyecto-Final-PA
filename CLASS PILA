#Clase Pila

require 'terminal-table'
require 'terminal-table/import'


class Pila

    def initialize
        @pila ={
            tope: nil,
            vacia: true,
            size: 0,
        }
        @pila_aux ={
            tope: nil,
            vacia: true,
            size: 0
        }
        @pasop=[]
    end
    def mostrarr
        ar=[]
        if @pila[:vacia]==true
            ar.push(' ')
        else
            a=@pila[:tope]
            loop do
                if a==nil
                    break
                end
               b=a[:valor]
                ar.push(b)
                a=a[:siguiente]    
            end
        end
        ar=ar.join('=>') 
        @pasop.push(ar)
    end
    def insertar
        if @pila_aux[:vacia]==false
        begin
        va=@pila_aux[:tope][:valor]
        if @pila_aux[:size]==0
            @pila_aux[:vacia]=true
        
        end
        if @pila[:vacia]==true
            @pila[:tope]=tope
            @pila[:vacia]=false
            @pila[:size]+=1
            mostrarr 
           
        else
            elemento ={
                valor:va,
                siguiente:nil,
            }
            topeaux=@pila[:tope]
            elemento[:siguiente]=topeaux
            @pila[:tope]=elemento
            @pila[:size]+=1
            mostrarr
            puts 'e2'
        
        end
    
        eliminaraux
      end while @pila_aux[:tope]!=nil
      @pila_aux[:vacia]=true
    
    4
    
    end
    end
    def eliminar
        if @pila[:tope]!=nil
       
           nodo= @pila[:tope]
           @pila[:tope]=@pila[:tope][:siguiente]
           nodo[:siguiente]=nil
           @pila[:size]-=1
        end
    end
    def eliminaraux
        if @pila_aux[:tope]!=nil
       
           nodo= @pila_aux[:tope]
           @pila_aux[:tope]=@pila_aux[:tope][:siguiente]
           nodo[:siguiente]=nil
           @pila_aux[:size]-=1
        end
    end
    def ordenar_pila(f)
        for i in 0..f.size-1 do
            a=f[i]   
            if @pila[:vacia]==true
                elemento = {
                    valor:a,
                    siguiente:nil,
                }
                @pila[:tope]=elemento
                @pila[:vacia]=false
                @pila[:size]+=1
                mostrarr      
            else
                begin
                if @pila[:size]==0
                    @pila[:vacia]=true  
                elsif a<@pila[:tope][:valor]
                    break
                else
                    vartope=@pila[:tope]
                    if @pila_aux[:vacia]==true
                        @pila_aux[:tope]=vartope
                        @pila_aux[:vacia]=false
                        @pila_aux[:size]+=1
                    elsif
                        sa=@pila[:tope][:valor]
                        elementou = {
                            valor:sa,
                            siguiente:nil,
                        }
                        tope=@pila_aux[:tope]
                        elementou[:siguiente]=tope
                        @pila_aux[:tope]=elementou
                        @pila_aux[:size]+=1
                    end
                    eliminar
                    mostrarr
                end       
            end while @pila[:vacia]!=true
            elemento = {
                valor:a,
                siguiente:nil,
            }
             if @pila[:vacia]==true
                @pila[:tope]=elemento
                @pila[:vacia]=false
                @pila[:size]+=1
                mostrarr
             else
                tope=@pila[:tope]
                elemento[:siguiente]=tope
                @pila[:tope]=elemento
                @pila[:size]+=1
                mostrarr       
             end
             if @pila_aux[:vacia]!=true
             insertar
             end
            end
        end
        
    end    
    def Impri

        puts ''
         t = table [{:value => 'Iteracion', :alignment => :center},'pasos']
        cont=0
        for i in 0..@pasop.size-1 do
        t << ["#{@pasop[i]}",cont]
        cont+=1
        end
        puts t
    end
end
